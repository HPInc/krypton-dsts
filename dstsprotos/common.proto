syntax = "proto3";

import "google/protobuf/timestamp.proto";

option go_package = "github.com/HPInc/krypton-dsts/dstsprotos";
package krypton.dsts;


// Common header attached to all gRPC requests served by the DSTS.
message DstsRequestHeader {
  // Version of the DSTS protocol.
  string protocol_version = 1;

  // Request ID - used for logging and correlation.
  string request_id = 2;

  // Request issued timestamp.
  google.protobuf.Timestamp request_time = 3;
}

message DstsResponseHeader {
  // Version of the DSTS protocol.
  string protocol_version = 1;

  // Response status code. Only valid gRPC response codes are supported.
  // All allowed values are documented at:
  // https://godoc.org/google.golang.org/grpc/codes
  uint32 status = 2;

  // The request ID that was specified in the incoming request. If no request
  // ID was specified by the caller, the request ID generated by the DSTS and 
  // used for logging is returned.
  string request_id = 3;

  // More information about the response status.
  string status_message = 4;

  // Response issued timestamp.
  google.protobuf.Timestamp response_time = 5;
}

message PingRequest {
  // The request sent by the client to the DSTS gRPC service to check if it is up.
  string message = 1;
}

message PingResponse {
  // The same message string received in the ping request is returned.
  string message = 1;

  // Response timestamp.
  google.protobuf.Timestamp response_time = 2;
}
