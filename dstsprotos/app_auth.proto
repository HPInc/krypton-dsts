syntax = "proto3";

import "common.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/HPInc/krypton-dsts/dstsprotos";
package krypton.dsts;


message AppAuthenticationChallengeRequest {
  // Common request header including protocol version & request identifier.
  DstsRequestHeader header = 1;

  // Version of the AppAuthenticationChallengeRequest message.
  string version = 2;

  // Unique identifier of the registered app requesting authentication.
  string app_id = 3;
}

message AppAuthenticationChallengeResponse {
  // Common response header including protocol version & request identifier.
  DstsResponseHeader header = 1;

  // The challenge string generated by DSTS for this AppAuthentication request.
  string challenge = 2;

  // Expiry timestamp.
  google.protobuf.Timestamp expires_at = 3;
}

message AppAuthenticationRequest {
  // Common request header including protocol version & request identifier.
  DstsRequestHeader header = 1;

  // Version of the AppAuthenticationChallengeRequest message.
  string version = 2;

  // Unique identifier of the registered app requesting authentication.
  string app_id = 3;

  // The type of assertion submitted by the caller in the assertion field, to
  // authenticate itself.
  string assertion_type = 4;

  // The signed assertion submitted by the caller to authenticate itself.
  string assertion = 5;
}

message AppAuthenticationResponse {
  // Common response header including protocol version & request identifier.
  DstsResponseHeader header = 1;

  // The access token generated by DSTS for this AppAuthentication request.
  string access_token = 2;

  // Expiry timestamp.
  google.protobuf.Timestamp expires_at = 3;
}